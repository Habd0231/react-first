{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch(url, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error('could not fetch the data from db');\n      }\n\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setLoading(false);\n      setError(null);\n    }).catch(err => {\n      if (err.name === 'AbortError') {\n        console.log('fetch aborted');\n      }\n\n      setLoading(false);\n      setError(err.message);\n    });\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n\n_s(useFetch, \"5DygiD9hLVao5f4myokgvJ8Er18=\");\n\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","data","setData","loading","setLoading","error","setError","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["E:/react/react-first/src/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nconst useFetch = (url) => {\r\n    const [data,setData] = useState(null)\r\n    const [loading,setLoading] = useState(true)\r\n    const [error,setError] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        const abortCont= new AbortController()\r\n\r\n        fetch(url, { signal: abortCont.signal })\r\n        .then(res => {\r\n            if (!res.ok) {\r\n                throw Error ('could not fetch the data from db')\r\n            }\r\n            return res.json()\r\n        })\r\n        .then(data => {\r\n            setData(data)\r\n            setLoading(false)\r\n            setError(null)\r\n        })\r\n        .catch(err =>{\r\n            if (err.name === 'AbortError') {\r\n                console.log('fetch aborted')\r\n                \r\n            }\r\n            setLoading(false)\r\n            setError(err.message)\r\n        })\r\n        return () => abortCont.abort()\r\n\r\n    }, [url])    \r\n    return { data, loading, error }\r\n\r\n}\r\n \r\nexport default useFetch\r\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AACA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;EAAA;;EACtB,MAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBJ,QAAQ,CAAC,IAAD,CAA/B;EACA,MAAM,CAACK,OAAD,EAASC,UAAT,IAAuBN,QAAQ,CAAC,IAAD,CAArC;EACA,MAAM,CAACO,KAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC,IAAD,CAAjC;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAE,IAAIC,eAAJ,EAAjB;IAEAC,KAAK,CAACT,GAAD,EAAM;MAAEU,MAAM,EAAEH,SAAS,CAACG;IAApB,CAAN,CAAL,CACCC,IADD,CACMC,GAAG,IAAI;MACT,IAAI,CAACA,GAAG,CAACC,EAAT,EAAa;QACT,MAAMC,KAAK,CAAE,kCAAF,CAAX;MACH;;MACD,OAAOF,GAAG,CAACG,IAAJ,EAAP;IACH,CAND,EAOCJ,IAPD,CAOMV,IAAI,IAAI;MACVC,OAAO,CAACD,IAAD,CAAP;MACAG,UAAU,CAAC,KAAD,CAAV;MACAE,QAAQ,CAAC,IAAD,CAAR;IACH,CAXD,EAYCU,KAZD,CAYOC,GAAG,IAAG;MACT,IAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;QAC3BC,OAAO,CAACC,GAAR,CAAY,eAAZ;MAEH;;MACDhB,UAAU,CAAC,KAAD,CAAV;MACAE,QAAQ,CAACW,GAAG,CAACI,OAAL,CAAR;IACH,CAnBD;IAoBA,OAAO,MAAMd,SAAS,CAACe,KAAV,EAAb;EAEH,CAzBQ,EAyBN,CAACtB,GAAD,CAzBM,CAAT;EA0BA,OAAO;IAAEC,IAAF;IAAQE,OAAR;IAAiBE;EAAjB,CAAP;AAEH,CAjCD;;GAAMN,Q;;AAmCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}